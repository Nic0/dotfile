" Use vim settings
set nocompatible
filetype on
filetype indent on
filetype plugin on

if has("gui_running")
  set gfn=Inconsolata\ 13
endif

" Coloration syntaxique
syntax on
set background=dark
colorscheme desert
let php_htmlInStrings=1 " Permet de colorer du html dans du php

set bs=2        " redefinition du backspace
set lbr         " laisse les mots entier
set ff=unix     " fin de ligne format unix
set is          " recherche incrémental
set ls=2        " barre de statut en permanance
set noea        " ne pas redimensionner la vue après découpage
set nohls       " ne pas mettre les termes recherché en surbrillance
set showcmd
set noic        " tenir compte de la casse pour la recherche
set mouse=h     " la souris c'est le mal
set so=3        " toujours 3 lignes à partir du début
set siso=2      " toujours 2 lignes avant la fin
set sm          " affiche la parenthèse correspondante
set title       " affiche le titre dans la barre de titre du term
set pt=<F11>    " évite la double indentation lors de c/c
set ruler
set wildmenu
set number      " active la numérotation
set wildmode=longest,list   " mode le l'autocomplétion
set spelllang=fr            " correction orthographique
set textwidth=79            " nombre de caractère par lignes
"set hidden
hi statusline   ctermfg=black 
hi lineNr       ctermfg=blue
"
" Redefinition de l'indentation
set expandtab
set shiftwidth=4
set softtabstop=4
set tabstop=4
set ai          " auto indent
set si          " identation intéligente

" Personnalisation de la ligne de status
set statusline=%F%m%r%h%w\ [%Y]\ [%03l-%03v]\ [%p%%]

"let g:miniBufExplModSelTarget = 1
"let g:miniBufExplorerMoreThanOne = 0
"let g:miniBufExplModSelTarget = 0
"let g:miniBufExplUseSingleClick = 1
"let g:miniBufExplMapWindowNavVim = 1
"let g:miniBufExplVSplit = 20
"let g:miniBufExplSplitBelow=1

map <c-w><c-t> :WMToggle<cr>
let mapleader = ","
map <leader>d :Dox<cr>
" Navigation dans les buffeurs
map <leader>t :bp<cr>
map <leader>s :bn<cr>
" vérification de la syntaxe pour PHP
map <leader>p :!/usr/bin/php -l %<cr>
" show invisible char
nmap <leader>l :set list!<CR>
set listchars=tab:▸\ ,eol:¬

" Replace espace insécable par X sauf pour .rst
imap   X
au BufRead,BufNewFile *.rst imap    
au BufRead,BufNewFile *.txt imap    
au BufRead,BufNewFile *.rst set textwidth=0

" Fast saving
nmap <leader>w :w!<cr>
nmap <leader>q :wq<cr>


nmap <F1> :set spell!<CR>
nmap <F2> :vsp<CR>
nmap <F4> :TlistToggle<CR>
nmap <F3> :badd 
nmap <F5> <Esc>:bprev<CR>
nmap <F6> <Esc>:bnext<CR>
map <F10> :NERDTreeToggle<CR>

let NERDTreeWinPos='right'

" gestion de xclip
vmap <C-c> y:call system("xclip -i -selection clipboard", getreg("\""))<CR>:call system("xclip -i", getreg("\""))<CR>
nmap <C-v> :call setreg("\"",system("xclip -o -selection clipboard"))<CR>p

" On active le support pour twig
au BufRead,BufNewFile *.twig set syntax=htmljinja
au FocusLost silent! :wa<CR>


" Taglist
let Tlist_Ctags_Cmd = "/usr/bin/ctags"
let Tlist_WinWidth = 40

" remap le saut de fichier/class/fnt avec ctags
nmap <leader>d <C-t>
nmap <leader>v <C-]>
" Fuzzy finder
nmap ff :FufFile 
nmap fd :FufDir 

" Le bépo, c'est le bien !
source /etc/vimrc.bepo

" Templates
au bufNewFile *.php 0r /usr/share/vim/vimfiles/template/php.php
au bufNewFile *.py 0r /usr/share/vim/vimfiles/template/py.py

"
"   FOLDING
"
" Save folding
au BufWinLeave * mkview
au BufWinEnter * silent loadview
" Shortcut
" create folder
nmap <leader>f zf
" open a folder
nmap <leader>q zo
" close a folder
nmap <leader>g zm
